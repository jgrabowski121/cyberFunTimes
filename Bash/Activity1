# Tools
explainbash.com

#> man bash
#  prints out the bash manual
#  g top
#  G bottom
#  / search for a patterns
#    n next instance of match

# curl cheat.sh/grep



# Activiity 1-1
#Activity: Using Brace-Expansion, create the following directories within the $HOME directory:

    #1123
    #1134
    #1145
    #1156

mkdir $HOME/{1123,1124,1145,1156}


#

#Activity 2:
#Copy all files in the $HOME/1123 directory, that end in ".txt", and omit files containing a tilde "~" character, to directory $HOME/CUT.
#Use only the find and cp commands. You will need to utilize the -exec option on find to accomplish this activity.
#The find command uses BOOLEAN "!" to designate that it does not want to find any files or directories that follows.

find $HOME/1123 -name *.txt ! -name *~.txt -exec cp {} $HOME/CUT \;

Activity 3:
#Using ONLY the find command, find all empty files/directories in directory /var 
#and print out ONLY the filename (not absolute path), and the inode number, 
#separated by newlines.

find /var/ -empty -printf "%i %f\n"

Activity 4:
Using ONLY the find command, find all files on the system with inode 4026532575 
and print only the filename to the screen, not the absolute path to the file, 
separating each filename with a newline. Ensure unneeded output is not visible.

find / -inode 4026532575 -printf "%f\n"

Activity 5: 

    Using only the ls -l and cut Commands, write a BASH script that shows all 
    filenames with extensions ie: 1.txt, etc., but no directories, in $HOME/CUT.
    Write those to a text file called names in $HOME/CUT directory.
    Omit the names filename from your output.

